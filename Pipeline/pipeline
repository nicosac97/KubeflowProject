import kfp
from kfp import dsl 
import kfp.onprem as onprem

@dsl.pipeline(name=' IID and NIID FedAVG Pipeline', description='Applies FedAVG to a IID MNIST dataset distributed between X clients ')
def iid_pipeline():

    # Loads the yaml manifest for each component
    
    fed_iid = kfp.components.load_component_from_file('IIDunique/FedProxiid.yaml')
    fed_niid = kfp.components.load_component_from_file('NIIDunique/FedProxniid.yaml')
    # Run download_data task with specified input as :
    #  number of train set, number of test set , n of clients , batch size ,
    #  path where train data is going to be saved
    #  path where test data is going to be saved
    pvc_name='iidfedavgpvc' 
    train_path='/mnt/mnistfed/iid/train'
    test_path='/mnt/mnistfed/iid/test'

    iid_task = fed_iid()
    niid_task = fed_niid()

    loss_path='/tmp/loss'
    acc_path='/tmp/acc'
    # Run tasks "fedAVG" given:
    # the output generated by "download_task".
    # number of iterations, number of epochs, value of learning rate for SGD 
    #  path where loss values is going to be saved
    #  path where accuracy values is going to be saved
            

if __name__ == '__main__':
    kfp.compiler.Compiler().compile(iid_pipeline, 'UniquePipeline.yaml')
    # kfp.Client().create_run_from_pipeline_func(basic_pipeline, arguments={})
